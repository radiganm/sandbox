;; .stumpwmrc
;; Mac Radigan

  (in-package :stumpwm)

  (stumpwm:gnewbg  "1")
  (stumpwm:gnewbg  "2")
  (stumpwm:gnewbg  "3")
  (stumpwm:gnewbg  "4")
  (stumpwm:gnewbg  "5")
  (stumpwm:gnewbg  "6")
  (stumpwm:gnewbg  "7")
  (stumpwm:gnewbg  "8")
  (stumpwm:gnewbg  "9")
  (stumpwm:gnewbg  "0")
 ;(stumpwm:gselect "0")

  (setq *startup-message* nil)
  (setq window-format "[%s] %t")
  (setf *message-window-gravity* :center)
  (setf *input-window-gravity* :center)
 ;(stumpwm:enable-mode-line (current-screen) (current-head) t (list "%w |" '(:eval (run-shell-command "date" t))))

  (setq terminal "/usr/bin/urxvt -bg black -fg white -vb +sb")
  (setq browser  "firefox")

  (stumpwm:set-prefix-key (kbd "C-h"))

  (defun shift-windows-forward (frames win)
    "Exchange windows through cycling frames."
    (when frames
      (let ((frame (car frames)))
        (shift-windows-forward (cdr frames)
          (frame-window frame))
        (when win
      (pull-window win frame)))))

  (defcommand rotate-windows () ()
    (let* (
        (frames (group-frames (current-group)))
        (win (frame-window (car (last frames))))
      )
      (shift-windows-forward frames win)))

  (defcommand fullscreen () ()
    "Fullscreen command"
    (let 
      (
        (group-file (format nil "/tmp/stumpwm-group-~a" (group-name (current-group))))
      )
      (if (null (cdr (head-frames (current-group) (current-head))))
        (restore-from-file group-file)
        (progn
          (dump-group-to-file group-file)
          (only)))))

  (define-key *top-map* (kbd "M-Q")     "quit")
  (define-key *top-map* (kbd "M-/")     "help")
  (define-key *top-map* (kbd "M-c")     "loadrc")
  (define-key *top-map* (kbd "M-RET")   "exec /usr/bin/urxvt -bg black -fg white -vb +sb")
  (define-key *top-map* (kbd "M-C-RET") "exec /usr/bin/urxvt -bg white -fg black -vb +sb")
  (define-key *top-map* (kbd "M-C-a")   "exec /opt/alacritty/bin/alacritty")
  (define-key *top-map* (kbd "M-p")     "exec ~/bin/ini.sh")
  (define-key *top-map* (kbd "M-e")     "exec /usr/bin/firefox")
  (define-key *top-map* (kbd "M-n")     "exec /usr/bin/firefox")
  (define-key *top-map* (kbd "M-:")     "eval")
  (define-key *top-map* (kbd "M-;")     "exec")
  (define-key *top-map* (kbd "M-d")     "exec")
  (define-key *top-map* (kbd "M-z")     "exec /usr/bin/i3lock -c 000000")
  (define-key *top-map* (kbd "M-s")     "hsplit")
  (define-key *top-map* (kbd "M-v")     "vsplit")
  (define-key *top-map* (kbd "M-q")     "remove")
  (define-key *top-map* (kbd "M-P")     "exchange-direction")
  (define-key *top-map* (kbd "M-u")     "kill-window")
  (define-key *top-map* (kbd "M-o")     "only")
  (define-key *top-map* (kbd "M-i")     "other")
  (define-key *top-map* (kbd "M-h")     "move-focus left")
  (define-key *top-map* (kbd "M-j")     "move-focus down")
  (define-key *top-map* (kbd "M-k")     "move-focus up")
  (define-key *top-map* (kbd "M-l")     "move-focus right")
  (define-key *top-map* (kbd "M-H")     "move-window left")
  (define-key *top-map* (kbd "M-J")     "move-window down")
  (define-key *top-map* (kbd "M-K")     "move-window up")
  (define-key *top-map* (kbd "M-L")     "move-window right")
  (define-key *top-map* (kbd "M-C-h")   "exchange-direction left")
  (define-key *top-map* (kbd "M-C-j")   "exchange-direction down")
  (define-key *top-map* (kbd "M-C-k")   "exchange-direction up")
  (define-key *top-map* (kbd "M-C-l")   "exchange-direction right")
  (define-key *top-map* (kbd "M-b")     "grouplist")
  (define-key *top-map* (kbd "M-B")     "windowlist")
  (define-key *top-map* (kbd "M-SPC")   "emacs")
  (define-key *top-map* (kbd "M-m")     "mark")
  (define-key *top-map* (kbd "M-'")     "pull-marked")
  (define-key *top-map* (kbd "M-W")     "dump-desktop-to-file .desktop")
  (define-key *top-map* (kbd "M-r")     "restore-from-file .desktop")
  (define-key *top-map* (kbd "M-w")     "rotate-windows")
  (define-key *top-map* (kbd "M-a")     "fullscreen")
  (define-key *top-map* (kbd "M-0")     "gselect 0")
  (define-key *top-map* (kbd "M-1")     "gselect 1")
  (define-key *top-map* (kbd "M-2")     "gselect 2")
  (define-key *top-map* (kbd "M-3")     "gselect 3")
  (define-key *top-map* (kbd "M-4")     "gselect 4")
  (define-key *top-map* (kbd "M-5")     "gselect 5")
  (define-key *top-map* (kbd "M-6")     "gselect 6")
  (define-key *top-map* (kbd "M-7")     "gselect 7")
  (define-key *top-map* (kbd "M-8")     "gselect 8")
  (define-key *top-map* (kbd "M-9")     "gselect 9")
  (define-key *top-map* (kbd "M-S-0")   "gmove 0")
  (define-key *top-map* (kbd "M-S-1")   "gmove 1")
  (define-key *top-map* (kbd "M-S-2")   "gmove 2")
  (define-key *top-map* (kbd "M-S-3")   "gmove 3")
  (define-key *top-map* (kbd "M-S-4")   "gmove 4")
  (define-key *top-map* (kbd "M-S-5")   "gmove 5")
  (define-key *top-map* (kbd "M-S-6")   "gmove 6")
  (define-key *top-map* (kbd "M-S-7")   "gmove 7")
  (define-key *top-map* (kbd "M-S-8")   "gmove 8")
  (define-key *top-map* (kbd "M-S-9")   "gmove 9")
  (define-key *top-map* (kbd "M-)")     "gmove 0")
  (define-key *top-map* (kbd "M-!")     "gmove 1")
  (define-key *top-map* (kbd "M-@")     "gmove 2")
  (define-key *top-map* (kbd "M-#")     "gmove 3")
  (define-key *top-map* (kbd "M-$")     "gmove 4")
  (define-key *top-map* (kbd "M-%")     "gmove 5")
  (define-key *top-map* (kbd "M-^")     "gmove 6")
  (define-key *top-map* (kbd "M-&")     "gmove 7")
  (define-key *top-map* (kbd "M-*")     "gmove 8")
  (define-key *top-map* (kbd "M-(")     "gmove 9")
  (define-key *top-map* (kbd "M-t")     "exec synclient TouchpadOff=1")
  (define-key *top-map* (kbd "M-T")     "exec synclient TouchpadOff=0")
  (define-key *top-map* (kbd "M-C-o")   "exec shutdown -h now")
  (define-key *top-map* (kbd "M-C-r")   "exec shutdown -r now")

  (define-key *top-map* (kbd "s-Q")     "quit")
  (define-key *top-map* (kbd "s-/")     "help")
  (define-key *top-map* (kbd "s-c")     "loadrc")
  (define-key *top-map* (kbd "s-RET")   "exec /usr/bin/urxvt -bg black -fg white -vb +sb")
  (define-key *top-map* (kbd "s-C-RET") "exec /usr/bin/urxvt -bg white -fg black -vb +sb")
  (define-key *top-map* (kbd "s-C-a")   "exec /opt/alacritty/bin/alacritty")
  (define-key *top-map* (kbd "s-p")     "exec ~/bin/ini.sh")
  (define-key *top-map* (kbd "s-e")     "exec /usr/bin/firefox")
  (define-key *top-map* (kbd "s-n")     "exec /usr/bin/firefox")
  (define-key *top-map* (kbd "s-:")     "eval")
  (define-key *top-map* (kbd "s-;")     "exec")
  (define-key *top-map* (kbd "s-d")     "exec")
  (define-key *top-map* (kbd "s-z")     "exec /usr/bin/i3lock -c 000000")
  (define-key *top-map* (kbd "s-s")     "hsplit")
  (define-key *top-map* (kbd "s-v")     "vsplit")
  (define-key *top-map* (kbd "s-q")     "remove")
  (define-key *top-map* (kbd "s-P")     "exchange-direction")
  (define-key *top-map* (kbd "s-u")     "kill-window")
  (define-key *top-map* (kbd "s-o")     "only")
  (define-key *top-map* (kbd "s-i")     "other")
  (define-key *top-map* (kbd "s-h")     "move-focus left")
  (define-key *top-map* (kbd "s-j")     "move-focus down")
  (define-key *top-map* (kbd "s-k")     "move-focus up")
  (define-key *top-map* (kbd "s-l")     "move-focus right")
  (define-key *top-map* (kbd "s-H")     "move-window left")
  (define-key *top-map* (kbd "s-J")     "move-window down")
  (define-key *top-map* (kbd "s-K")     "move-window up")
  (define-key *top-map* (kbd "s-L")     "move-window right")
  (define-key *top-map* (kbd "s-C-h")   "exchange-direction left")
  (define-key *top-map* (kbd "s-C-j")   "exchange-direction down")
  (define-key *top-map* (kbd "s-C-k")   "exchange-direction up")
  (define-key *top-map* (kbd "s-C-l")   "exchange-direction right")
  (define-key *top-map* (kbd "s-b")     "grouplist")
  (define-key *top-map* (kbd "s-B")     "windowlist")
  (define-key *top-map* (kbd "s-SPC")   "emacs")
  (define-key *top-map* (kbd "s-m")     "mark")
  (define-key *top-map* (kbd "s-'")     "pull-marked")
  (define-key *top-map* (kbd "s-W")     "dump-desktop-to-file .desktop")
  (define-key *top-map* (kbd "s-r")     "restore-from-file .desktop")
  (define-key *top-map* (kbd "s-w")     "rotate-windows")
  (define-key *top-map* (kbd "s-a")     "fullscreen")
  (define-key *top-map* (kbd "s-0")     "gselect 0")
  (define-key *top-map* (kbd "s-1")     "gselect 1")
  (define-key *top-map* (kbd "s-2")     "gselect 2")
  (define-key *top-map* (kbd "s-3")     "gselect 3")
  (define-key *top-map* (kbd "s-4")     "gselect 4")
  (define-key *top-map* (kbd "s-5")     "gselect 5")
  (define-key *top-map* (kbd "s-6")     "gselect 6")
  (define-key *top-map* (kbd "s-7")     "gselect 7")
  (define-key *top-map* (kbd "s-8")     "gselect 8")
  (define-key *top-map* (kbd "s-9")     "gselect 9")
  (define-key *top-map* (kbd "s-S-0")   "gmove 0")
  (define-key *top-map* (kbd "s-S-1")   "gmove 1")
  (define-key *top-map* (kbd "s-S-2")   "gmove 2")
  (define-key *top-map* (kbd "s-S-3")   "gmove 3")
  (define-key *top-map* (kbd "s-S-4")   "gmove 4")
  (define-key *top-map* (kbd "s-S-5")   "gmove 5")
  (define-key *top-map* (kbd "s-S-6")   "gmove 6")
  (define-key *top-map* (kbd "s-S-7")   "gmove 7")
  (define-key *top-map* (kbd "s-S-8")   "gmove 8")
  (define-key *top-map* (kbd "s-S-9")   "gmove 9")
  (define-key *top-map* (kbd "s-)")     "gmove 0")
  (define-key *top-map* (kbd "s-!")     "gmove 1")
  (define-key *top-map* (kbd "s-@")     "gmove 2")
  (define-key *top-map* (kbd "s-#")     "gmove 3")
  (define-key *top-map* (kbd "s-$")     "gmove 4")
  (define-key *top-map* (kbd "s-%")     "gmove 5")
  (define-key *top-map* (kbd "s-^")     "gmove 6")
  (define-key *top-map* (kbd "s-&")     "gmove 7")
  (define-key *top-map* (kbd "s-*")     "gmove 8")
  (define-key *top-map* (kbd "s-(")     "gmove 9")
  (define-key *top-map* (kbd "s-t")     "exec synclient TouchpadOff=1")
  (define-key *top-map* (kbd "s-T")     "exec synclient TouchpadOff=0")
  (define-key *top-map* (kbd "s-C-o")   "exec shutdown -h now")
  (define-key *top-map* (kbd "s-C-r")   "exec shutdown -r now")


; (require 'asdf)
; (asdf:load-system :swank-client)
; (load "/opt/asdf-central-registry/dists/quicklisp/software/slime-v2.19/swank-loader.lisp")
; (defcommand swank () ()
;   (swank-loader:init)
;   (swank:create-server :port 4005
;                        :style swank:*communication-style*
;                        :dont-close t))
;;(swank)

;; *EOF*
